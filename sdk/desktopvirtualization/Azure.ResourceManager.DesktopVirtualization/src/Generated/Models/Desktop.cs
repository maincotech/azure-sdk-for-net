// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> Schema for Desktop properties. </summary>
    public partial class Desktop : Resource
    {
        /// <summary> Initializes a new instance of Desktop. </summary>
        public Desktop()
        {
        }

        /// <summary> Initializes a new instance of Desktop. </summary>
        /// <param name="id"> Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts. </param>
        /// <param name="description"> Description of Desktop. </param>
        /// <param name="friendlyName"> Friendly name of Desktop. </param>
        /// <param name="iconHash"> Hash of the icon. </param>
        /// <param name="iconContent"> The icon a 64 bit string as a byte array. </param>
        internal Desktop(string id, string name, string type, string description, string friendlyName, string iconHash, byte[] iconContent) : base(id, name, type)
        {
            Description = description;
            FriendlyName = friendlyName;
            IconHash = iconHash;
            IconContent = iconContent;
        }

        /// <summary> Description of Desktop. </summary>
        public string Description { get; set; }
        /// <summary> Friendly name of Desktop. </summary>
        public string FriendlyName { get; set; }
        /// <summary> Hash of the icon. </summary>
        public string IconHash { get; }
        /// <summary> The icon a 64 bit string as a byte array. </summary>
        public byte[] IconContent { get; }
    }
}
