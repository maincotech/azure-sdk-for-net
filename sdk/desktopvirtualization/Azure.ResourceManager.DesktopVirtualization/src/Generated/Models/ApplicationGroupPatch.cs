// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> ApplicationGroup properties that can be patched. </summary>
    public partial class ApplicationGroupPatch : Resource
    {
        /// <summary> Initializes a new instance of ApplicationGroupPatch. </summary>
        public ApplicationGroupPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ApplicationGroupPatch. </summary>
        /// <param name="id"> Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts. </param>
        /// <param name="tags"> tags to be updated. </param>
        /// <param name="description"> Description of ApplicationGroup. </param>
        /// <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        internal ApplicationGroupPatch(string id, string name, string type, IDictionary<string, string> tags, string description, string friendlyName) : base(id, name, type)
        {
            Tags = tags;
            Description = description;
            FriendlyName = friendlyName;
        }

        /// <summary> tags to be updated. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> Description of ApplicationGroup. </summary>
        public string Description { get; set; }
        /// <summary> Friendly name of ApplicationGroup. </summary>
        public string FriendlyName { get; set; }
    }
}
