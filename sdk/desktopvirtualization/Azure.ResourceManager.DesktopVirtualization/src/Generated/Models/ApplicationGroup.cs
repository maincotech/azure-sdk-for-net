// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> Represents a ApplicationGroup definition. </summary>
    public partial class ApplicationGroup : TrackedResource
    {
        /// <summary> Initializes a new instance of ApplicationGroup. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="hostPoolArmPath"> HostPool arm path of ApplicationGroup. </param>
        /// <param name="applicationGroupType"> Resource Type of ApplicationGroup. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> or <paramref name="hostPoolArmPath"/> is null. </exception>
        public ApplicationGroup(string location, string hostPoolArmPath, ApplicationGroupType applicationGroupType) : base(location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }
            if (hostPoolArmPath == null)
            {
                throw new ArgumentNullException(nameof(hostPoolArmPath));
            }

            HostPoolArmPath = hostPoolArmPath;
            ApplicationGroupType = applicationGroupType;
        }

        /// <summary> Initializes a new instance of ApplicationGroup. </summary>
        /// <param name="id"> Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="description"> Description of ApplicationGroup. </param>
        /// <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        /// <param name="hostPoolArmPath"> HostPool arm path of ApplicationGroup. </param>
        /// <param name="workspaceArmPath"> Workspace arm path of ApplicationGroup. </param>
        /// <param name="applicationGroupType"> Resource Type of ApplicationGroup. </param>
        internal ApplicationGroup(string id, string name, string type, IDictionary<string, string> tags, string location, string description, string friendlyName, string hostPoolArmPath, string workspaceArmPath, ApplicationGroupType applicationGroupType) : base(id, name, type, tags, location)
        {
            Description = description;
            FriendlyName = friendlyName;
            HostPoolArmPath = hostPoolArmPath;
            WorkspaceArmPath = workspaceArmPath;
            ApplicationGroupType = applicationGroupType;
        }

        /// <summary> Description of ApplicationGroup. </summary>
        public string Description { get; set; }
        /// <summary> Friendly name of ApplicationGroup. </summary>
        public string FriendlyName { get; set; }
        /// <summary> HostPool arm path of ApplicationGroup. </summary>
        public string HostPoolArmPath { get; set; }
        /// <summary> Workspace arm path of ApplicationGroup. </summary>
        public string WorkspaceArmPath { get; }
        /// <summary> Resource Type of ApplicationGroup. </summary>
        public ApplicationGroupType ApplicationGroupType { get; set; }
    }
}
