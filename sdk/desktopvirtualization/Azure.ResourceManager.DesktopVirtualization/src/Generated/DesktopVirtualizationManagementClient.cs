// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.DesktopVirtualization;

namespace Azure.ResourceManager.DesktopVirtualization
{
    /// <summary> DesktopVirtualization service management client. </summary>
    public class DesktopVirtualizationManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;
        private readonly string _subscriptionId;

        /// <summary> Initializes a new instance of DesktopVirtualizationManagementClient for mocking. </summary>
        protected DesktopVirtualizationManagementClient()
        {
        }

        /// <summary> Initializes a new instance of DesktopVirtualizationManagementClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public DesktopVirtualizationManagementClient(string subscriptionId, TokenCredential tokenCredential, DesktopVirtualizationManagementClientOptions options = null) : this(null, subscriptionId, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of DesktopVirtualizationManagementClient. </summary>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> is null. </exception>
        public DesktopVirtualizationManagementClient(Uri endpoint, string subscriptionId, TokenCredential tokenCredential, DesktopVirtualizationManagementClientOptions options = null)
        {
            endpoint ??= new Uri("https://management.azure.com");
            if (subscriptionId == null)
            {
                throw new ArgumentNullException(nameof(subscriptionId));
            }

            options ??= new DesktopVirtualizationManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _endpoint = endpoint;
            _subscriptionId = subscriptionId;
        }

        /// <summary> Returns an instance of Operations. </summary>
        public virtual Operations Operations => new Operations(_clientDiagnostics, _pipeline, _endpoint);

        /// <summary> Returns an instance of WorkspacesOperations. </summary>
        public virtual WorkspacesOperations Workspaces => new WorkspacesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ApplicationGroupsOperations. </summary>
        public virtual ApplicationGroupsOperations ApplicationGroups => new ApplicationGroupsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of StartMenuItemsOperations. </summary>
        public virtual StartMenuItemsOperations StartMenuItems => new StartMenuItemsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ApplicationsOperations. </summary>
        public virtual ApplicationsOperations Applications => new ApplicationsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of DesktopsOperations. </summary>
        public virtual DesktopsOperations Desktops => new DesktopsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of HostPoolsOperations. </summary>
        public virtual HostPoolsOperations HostPools => new HostPoolsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of UserSessionsOperations. </summary>
        public virtual UserSessionsOperations UserSessions => new UserSessionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of SessionHostsOperations. </summary>
        public virtual SessionHostsOperations SessionHosts => new SessionHostsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
    }
}
